version: "3.3"

networks:
  net:
    driver: overlay
    attachable: true

volumes:
    prometheus: {}
    grafana: {}
    alertmanager: {}

configs:
  node_rules:
    file: ./prometheus/rules/swarm_node.rules.yml
  task_rules:
    file: ./prometheus/rules/swarm_task.rules.yml

services:
  traefik:
    image: traefik
    networks:
      - net
    command: --api --docker --docker.swarmMode --docker.domain=traefik --docker.watch --web --web.metrics.prometheus --web.metrics.prometheus.buckets="0.1,0.3,1.2,5.0"
    ports:    
      - "8081:8080"
      - "9090:9090"
      - "3000:3000"
      - "9093:9093"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  cadvisor:
    image: google/cadvisor
    networks:
      - net
    command: -logtostderr -docker_only
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /var/run:/var/run
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  grafana:
    image: stefanprodan/swarmprom-grafana:5.3.4
    #ports:
    #  - "3000:3000"
    labels:
      - "traefik.backend=grafana"
      - "traefik.frontend.rule=Host:grafana.imolab.it"
      - "traefik.docker.network=net"
      - "traefik.enable=true"
      - "traefik.port=3000"
      - "traefik.default.protocol=http"
    networks:
      - net
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-f0rzar0ma}
      - GF_USERS_ALLOW_SIGN_UP=false
      #- GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL:-localhost}
      #- GF_SMTP_ENABLED=${GF_SMTP_ENABLED:-false}
      #- GF_SMTP_FROM_ADDRESS=${GF_SMTP_FROM_ADDRESS:-grafana@test.com}
      #- GF_SMTP_FROM_NAME=${GF_SMTP_FROM_NAME:-Grafana}
      #- GF_SMTP_HOST=${GF_SMTP_HOST:-smtp:25}
      #- GF_SMTP_USER=${GF_SMTP_USER}
      #- GF_SMTP_PASSWORD=${GF_SMTP_PASSWORD}
    volumes:
      - grafana:/var/lib/grafana
    deploy:
      mode: replicated
      replicas: 3
      #placement:
      #  constraints:
      #    - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  alertmanager:
    image: stefanprodan/swarmprom-alertmanager:v0.14.0
    #ports:
    #  - "9093:9093"
    labels:
      - "traefik.backend=alertmanager"
      - "traefik.frontend.rule=Host:alertmanager.imolab.it"
      - "traefik.docker.network=net"
      - "traefik.enable=true"
      - "traefik.port=9093"
      - "traefik.default.protocol=http"
    networks:
      - net
    environment:
      - SLACK_URL=${SLACK_URL:-https://hooks.slack.com/services/TOKEN}
      - SLACK_CHANNEL=${SLACK_CHANNEL:-general}
      - SLACK_USER=${SLACK_USER:-alertmanager}
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    volumes:
      - alertmanager:/alertmanager
    deploy:
      mode: replicated
      replicas: 3
      #placement:
      #  constraints:
      #    - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  smtp:
    image: namshi/smtp
    ports:
     - "25:25"
    networks:
      - net
    environment:
     #  # MUST start with : e.g RELAY_NETWORKS: :192.168.0.0/24:10.0.0.0/16
     #  # if acting as a relay this or RELAY_DOMAINS must be filled out or incoming mail will be rejected
     #  RELAY_NETWORKS: :192.168.0.0/24
     #  # what domains should be accepted to forward to lower distance MX server.
     #  RELAY_DOMAINS: <domain1> : <domain2> : <domain3>
     #  # To act as a Gmail relay
     #  GMAIL_USER:
     #  GMAIL_PASSWORD:
     #  # For use with Amazon SES relay
     #  SES_USER:
     #  SES_PASSWORD:
     #  SES_REGION:
     #  # if provided will enable TLS support
     #  KEY_PATH:
     #  CERTIFICATE_PATH:
     #  # the outgoing mail hostname
      MAILNAME: alert.imolab.it
     #  # set this to any value to disable ipv6
     #  DISABLE_IPV6:
     # # Generic SMTP Relay
     # SMARTHOST_ADDRESS:
     # SMARTHOST_PORT:
     # SMARTHOST_USER:
     # SMARTHOST_PASSWORD:
     # SMARTHOST_ALIASES:
    deploy:
      mode: replicated
      replicas: 3
      #placement:
      #  constraints:
      #    - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  node-exporter:
    image: stefanprodan/swarmprom-node-exporter:v0.16.0
    networks:
      - net
    environment:
      - NODE_ID={{.Node.ID}}
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/hostname:/etc/nodename
    command:
      - '--path.sysfs=/host/sys'
      - '--path.procfs=/host/proc'
      - '--collector.textfile.directory=/etc/node-exporter/'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--no-collector.ipvs'
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  prometheus:
    image: stefanprodan/swarmprom-prometheus:v2.5.0
    #ports:
    # - "9090:9090"
    labels:
      - "traefik.backend=prometheus"
      - "traefik.frontend.rule=Host:prometheus.imolab.it"
      - "traefik.docker.network=net"
      - "traefik.enable=true"
      - "traefik.port=9090"
      - "traefik.default.protocol=http"
    networks:
      - net
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=24h'
    volumes:
      - prometheus:/prometheus
    configs:
      - source: node_rules
        target: /etc/prometheus/swarm_node.rules.yml
      - source: task_rules
        target: /etc/prometheus/swarm_task.rules.yml
    deploy:
      mode: replicated
      replicas: 3
      #placement:
      #  constraints:
      #    - node.role == manager
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 128M
